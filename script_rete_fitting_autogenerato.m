clc
clear
close all
%Cic
load matPhiLinearDatiIdentificazioneTotali.mat
load vettoreMercolediTarget.mat

% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by Neural Fitting app
% Created 12-May-2020 19:20:05
%
% This script assumes these variables are defined:
%
%   phi_linear - input data.
%   Y - target data.

%Devo fare la trasposta poichè prende come colonna il vettore
%degli input e ogni colonna è l'i-esimo vettore input 
%Lo stesso viene fatto per il target
x = phi_linear';
t = Y'; 

% Choose a Training Function
% For a list of all training functions type: help nntrain
% 'trainlm' is usually fastest.
% 'trainbr' takes longer but may be better for challenging problems.
% 'trainscg' uses less memory. Suitable in low memory situations.
trainFcn = 'trainlm';  % Levenberg-Marquardt backpropagation.

% Create a Fitting Network
hiddenLayerSize = 10;
net = fitnet(hiddenLayerSize,trainFcn);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% Train the Network
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y)

% View the Network
view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, ploterrhist(e)
%figure, plotregression(t,y)
%figure, plotfit(net,x,t)

%%Faccio io lo scatter delle ultime quindici settimane e degli ultimi dati
settimane_di_validazione = 15;
punto_di_partenza= length(Y) - settimane_di_validazione+1;
vettoreOriginale = Y(punto_di_partenza:length(Y));
%Ricordarsi che bisogna fare la trasposta per i dati di stima
%Prendo le ultime righe della matrice e tutte e 8 le colonne
matriceDatiStima = phi_linear(punto_di_partenza:length(Y), 1:8)';
vettoreStimato = net(matriceDatiStima);
settimane = 1:15;


scatter (settimane,vettoreOriginale,'r','x')
hold on
grid on
scatter (settimane, vettoreStimato, 'b')